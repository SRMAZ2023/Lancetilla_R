// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Lancetilla.Entities.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Lancetilla.DataAccess.Context
{
    public partial class Db_LancetillaContext : DbContext
    {
        public Db_LancetillaContext()
        {
        }

        public Db_LancetillaContext(DbContextOptions<Db_LancetillaContext> options)
            : base(options)
        {
        }

        public virtual DbSet<VW_FacturasDetalle> VW_FacturasDetalle { get; set; }
        public virtual DbSet<VW_MantenimientoAnimales> VW_MantenimientoAnimales { get; set; }
        public virtual DbSet<VW_tbALimentacion> VW_tbALimentacion { get; set; }
        public virtual DbSet<VW_tbAnimales> VW_tbAnimales { get; set; }
        public virtual DbSet<VW_tbAreasBotanicas> VW_tbAreasBotanicas { get; set; }
        public virtual DbSet<VW_tbAreasZoologico> VW_tbAreasZoologico { get; set; }
        public virtual DbSet<VW_tbCargos> VW_tbCargos { get; set; }
        public virtual DbSet<VW_tbCuidadoPlanta> VW_tbCuidadoPlanta { get; set; }
        public virtual DbSet<VW_tbCuidados> VW_tbCuidados { get; set; }
        public virtual DbSet<VW_tbDepartamentos> VW_tbDepartamentos { get; set; }
        public virtual DbSet<VW_tbEmpleados> VW_tbEmpleados { get; set; }
        public virtual DbSet<VW_tbEspecies> VW_tbEspecies { get; set; }
        public virtual DbSet<VW_tbEstadosCiviles> VW_tbEstadosCiviles { get; set; }
        public virtual DbSet<VW_tbFacturas> VW_tbFacturas { get; set; }
        public virtual DbSet<VW_tbHabitat> VW_tbHabitat { get; set; }
        public virtual DbSet<VW_tbMantenimientos> VW_tbMantenimientos { get; set; }
        public virtual DbSet<VW_tbMetodosPago> VW_tbMetodosPago { get; set; }
        public virtual DbSet<VW_tbMunicipios> VW_tbMunicipios { get; set; }
        public virtual DbSet<VW_tbPlantas> VW_tbPlantas { get; set; }
        public virtual DbSet<VW_tbRazas> VW_tbRazas { get; set; }
        public virtual DbSet<VW_tbReinos> VW_tbReinos { get; set; }
        public virtual DbSet<VW_tbRoles> VW_tbRoles { get; set; }
        public virtual DbSet<VW_tbRolesPantalla_INDEX> VW_tbRolesPantalla_INDEX { get; set; }
        public virtual DbSet<VW_tbTickets> VW_tbTickets { get; set; }
        public virtual DbSet<VW_tbTiposCuidados> VW_tbTiposCuidados { get; set; }
        public virtual DbSet<VW_tbTiposMantenimientos> VW_tbTiposMantenimientos { get; set; }
        public virtual DbSet<VW_tbTiposPlantas> VW_tbTiposPlantas { get; set; }
        public virtual DbSet<VW_tbUsuarios> VW_tbUsuarios { get; set; }
        public virtual DbSet<VW_tbVisitantes> VW_tbVisitantes { get; set; }
        public virtual DbSet<tbAlimentacion> tbAlimentacion { get; set; }
        public virtual DbSet<tbAnimales> tbAnimales { get; set; }
        public virtual DbSet<tbAreasBotanicas> tbAreasBotanicas { get; set; }
        public virtual DbSet<tbAreasZoologico> tbAreasZoologico { get; set; }
        public virtual DbSet<tbCargos> tbCargos { get; set; }
        public virtual DbSet<tbCuidadoPlanta> tbCuidadoPlanta { get; set; }
        public virtual DbSet<tbCuidados> tbCuidados { get; set; }
        public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }
        public virtual DbSet<tbEmpleados> tbEmpleados { get; set; }
        public virtual DbSet<tbEspecies> tbEspecies { get; set; }
        public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }
        public virtual DbSet<tbFacturas> tbFacturas { get; set; }
        public virtual DbSet<tbFacturasDetalles> tbFacturasDetalles { get; set; }
        public virtual DbSet<tbHabitat> tbHabitat { get; set; }
        public virtual DbSet<tbMantenimientoAnimal> tbMantenimientoAnimal { get; set; }
        public virtual DbSet<tbMantenimientos> tbMantenimientos { get; set; }
        public virtual DbSet<tbMetodosPago> tbMetodosPago { get; set; }
        public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }
        public virtual DbSet<tbPantallas> tbPantallas { get; set; }
        public virtual DbSet<tbPlantas> tbPlantas { get; set; }
        public virtual DbSet<tbRazas> tbRazas { get; set; }
        public virtual DbSet<tbReinos> tbReinos { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbRolesPantallas> tbRolesPantallas { get; set; }
        public virtual DbSet<tbTickets> tbTickets { get; set; }
        public virtual DbSet<tbTiposCuidados> tbTiposCuidados { get; set; }
        public virtual DbSet<tbTiposMantenimientos> tbTiposMantenimientos { get; set; }
        public virtual DbSet<tbTiposPlantas> tbTiposPlantas { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }
        public virtual DbSet<tbVisitantes> tbVisitantes { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS");

            modelBuilder.Entity<VW_FacturasDetalle>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FacturasDetalle", "fact");

                entity.Property(e => e.fade_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.fade_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.fade_Total).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.tick_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_MantenimientoAnimales>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_MantenimientoAnimales", "mant");

                entity.Property(e => e.anim_Nombre)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.maan_Fecha)
                    .HasMaxLength(14)
                    .IsUnicode(false);

                entity.Property(e => e.maan_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.maan_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.tima_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbALimentacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbALimentacion", "zool");

                entity.Property(e => e.alim_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.alim_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.alim_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.alim_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbAnimales>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbAnimales", "zool");

                entity.Property(e => e.alim_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.anim_Codigo)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.anim_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.anim_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.anim_Nombre)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.arzo_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.habi_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.raza_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.rein_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbAreasBotanicas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbAreasBotanicas", "bota");

                entity.Property(e => e.arbo_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.arbo_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.arbo_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.arbo_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbAreasZoologico>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbAreasZoologico", "zool");

                entity.Property(e => e.arzo_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.arzo_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.arzo_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.arzo_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbCargos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbCargos", "mant");

                entity.Property(e => e.carg_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.carg_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.carg_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.carg_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbCuidadoPlanta>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbCuidadoPlanta", "bota");

                entity.Property(e => e.cupl_Fecha)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.cupl_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.cupl_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.plan_Codigo)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.ticu_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.tipl_NombreCientifico)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.tipl_NombreComun)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbCuidados>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbCuidados", "bota");

                entity.Property(e => e.cuid_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.cuid_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.cuid_Observacion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.ticu_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbDepartamentos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbDepartamentos", "mant");

                entity.Property(e => e.dept_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.dept_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.dept_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.dept_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbEmpleados>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbEmpleados", "mant");

                entity.Property(e => e.carg_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.dept_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.dept_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.empl_Apellido)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.empl_Direccion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empl_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.empl_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.empl_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.empl_Identidad)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.empl_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.empl_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.empl_Sexos)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.empl_Telefono)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.estc_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.muni_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbEspecies>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbEspecies", "zool");

                entity.Property(e => e.espe_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.espe_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.espe_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.espe_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbEstadosCiviles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbEstadosCiviles", "mant");

                entity.Property(e => e.estc_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.estc_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.estc_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.estc_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbFacturas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbFacturas", "fact");

                entity.Property(e => e.empleado)
                    .IsRequired()
                    .HasMaxLength(201);

                entity.Property(e => e.fact_Fecha).HasColumnType("datetime");

                entity.Property(e => e.fact_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.fact_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.meto_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);

                entity.Property(e => e.visitante)
                    .IsRequired()
                    .HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbHabitat>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbHabitat", "zool");

                entity.Property(e => e.habi_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.habi_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.habi_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.habi_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbMantenimientos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbMantenimientos", "mant");

                entity.Property(e => e.mant_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.mant_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.mant_Observaciones)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.tima_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbMetodosPago>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbMetodosPago", "fact");

                entity.Property(e => e.meto_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.meto_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.meto_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.meto_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbMunicipios>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbMunicipios", "mant");

                entity.Property(e => e.dept_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.dept_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.muni_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.muni_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbPlantas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbPlantas", "bota");

                entity.Property(e => e.arbo_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.plan_Codigo)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.plan_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.plan_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.tipl_NombreCientifico)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.tipl_NombreComun)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbRazas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbRazas", "zool");

                entity.Property(e => e.espe_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.habi_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.raza_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.raza_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.raza_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.raza_NombreCientifico)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.rein_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbReinos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbReinos", "zool");

                entity.Property(e => e.rein_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.rein_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.rein_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.rein_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbRoles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbRoles", "acce");

                entity.Property(e => e.role_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.role_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.role_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.role_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbRolesPantalla_INDEX>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbRolesPantalla_INDEX", "acce");

                entity.Property(e => e.pant_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.role_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.ropa_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.ropa_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbTickets>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbTickets", "fact");

                entity.Property(e => e.tick_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.tick_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.tick_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.tick_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.tick_Precio).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbTiposCuidados>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbTiposCuidados", "bota");

                entity.Property(e => e.ticu_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.ticu_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.ticu_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.ticu_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbTiposMantenimientos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbTiposMantenimientos", "mant");

                entity.Property(e => e.tima_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.tima_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.tima_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.tima_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbTiposPlantas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbTiposPlantas", "zool");

                entity.Property(e => e.rein_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.tipl_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.tipl_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.tipl_NombreCientifico)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.tipl_NombreComun)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);
            });

            modelBuilder.Entity<VW_tbUsuarios>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbUsuarios", "acce");

                entity.Property(e => e.empl_Nombre)
                    .IsRequired()
                    .HasMaxLength(201);

                entity.Property(e => e.role_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.usua_Clave).IsRequired();

                entity.Property(e => e.usua_EsAdmin)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.usua_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.usua_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.usua_NombreUsuario)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.usua_UserCreaNombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(100);
            });
            modelBuilder.Entity<VW_tbVisitantes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbVisitantes", "mant");

                entity.Property(e => e.usua_UserCreaNombre).HasMaxLength(201);

                entity.Property(e => e.usua_UserModiNombre).HasMaxLength(201);

                entity.Property(e => e.visi_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.visi_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.visi_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.visi_NombreCompleto)
                    .IsRequired()
                    .HasMaxLength(307);

                entity.Property(e => e.visi_Nombres)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.visi_Apellido).HasMaxLength(100);



                entity.Property(e => e.visi_RTN)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.visi_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.visi_Sexos)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tbAlimentacion>(entity =>
            {
                entity.HasKey(e => e.alim_Id)
                    .HasName("PK__tbAlimen__E14BE4FC3D0F704C");

                entity.ToTable("tbAlimentacion", "zool");

                entity.Property(e => e.alim_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.alim_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.alim_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.alim_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.alim_UserCreacionNavigation)
                    .WithMany(p => p.tbAlimentacionalim_UserCreacionNavigation)
                    .HasForeignKey(d => d.alim_UserCreacion)
                    .HasConstraintName("FK_zool_tbAlimentacion_alim_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.alim_UserModificacionNavigation)
                    .WithMany(p => p.tbAlimentacionalim_UserModificacionNavigation)
                    .HasForeignKey(d => d.alim_UserModificacion)
                    .HasConstraintName("FK_zool_tbAlimentacion_alim_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbAnimales>(entity =>
            {
                entity.HasKey(e => e.anim_Id)
                    .HasName("PK__tbAnimal__565C1AC67E66DF61");

                entity.ToTable("tbAnimales", "zool");

                entity.HasIndex(e => e.anim_Codigo, "UQ__tbAnimal__47961D47F4A1B0C4")
                    .IsUnique();

                entity.Property(e => e.anim_Codigo)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.anim_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.anim_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.anim_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.anim_Nombre)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.HasOne(d => d.alim)
                    .WithMany(p => p.tbAnimales)
                    .HasForeignKey(d => d.alim_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_zool_tbAnimales_alim_Id_zool_tbAlimetacion_alim_Id");

                entity.HasOne(d => d.anim_UserCreacionNavigation)
                    .WithMany(p => p.tbAnimalesanim_UserCreacionNavigation)
                    .HasForeignKey(d => d.anim_UserCreacion)
                    .HasConstraintName("FK_zool_tbAnimales_anim_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.anim_UserModificacionNavigation)
                    .WithMany(p => p.tbAnimalesanim_UserModificacionNavigation)
                    .HasForeignKey(d => d.anim_UserModificacion)
                    .HasConstraintName("FK_zool_tbAnimales_anim_UserModificacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.arzo)
                    .WithMany(p => p.tbAnimales)
                    .HasForeignKey(d => d.arzo_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_zool_tbAnimales_arzo_Id_zool_tbAreasZoologico_arzo_Id");

                entity.HasOne(d => d.raza)
                    .WithMany(p => p.tbAnimales)
                    .HasForeignKey(d => d.raza_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_zool_tbAnimales_raza_Id_zool_tbRazas_raza_Id");
            });

            modelBuilder.Entity<tbAreasBotanicas>(entity =>
            {
                entity.HasKey(e => e.arbo_Id)
                    .HasName("PK__tbAreasB__D7D76ECAC18C711A");

                entity.ToTable("tbAreasBotanicas", "bota");

                entity.Property(e => e.arbo_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.arbo_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.arbo_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.arbo_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.arbo_UserCreacionNavigation)
                    .WithMany(p => p.tbAreasBotanicasarbo_UserCreacionNavigation)
                    .HasForeignKey(d => d.arbo_UserCreacion)
                    .HasConstraintName("FK_bota_tbAreasBotanicas_arbo_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.arbo_UserModificacionNavigation)
                    .WithMany(p => p.tbAreasBotanicasarbo_UserModificacionNavigation)
                    .HasForeignKey(d => d.arbo_UserModificacion)
                    .HasConstraintName("FK_bota_tbAreasBotanicas_arbo_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbAreasZoologico>(entity =>
            {
                entity.HasKey(e => e.arzo_Id)
                    .HasName("PK__tbAreasZ__A6877503ABC7D0FF");

                entity.ToTable("tbAreasZoologico", "zool");

                entity.Property(e => e.arzo_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.arzo_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.arzo_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.arzo_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.arzo_UserCreacionNavigation)
                    .WithMany(p => p.tbAreasZoologicoarzo_UserCreacionNavigation)
                    .HasForeignKey(d => d.arzo_UserCreacion)
                    .HasConstraintName("FK_zool_tbAreasZoologico_arzo_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.arzo_UserModificacionNavigation)
                    .WithMany(p => p.tbAreasZoologicoarzo_UserModificacionNavigation)
                    .HasForeignKey(d => d.arzo_UserModificacion)
                    .HasConstraintName("FK_zool_tbAreasZoologico_arzo_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbCargos>(entity =>
            {
                entity.HasKey(e => e.carg_Id)
                    .HasName("PK__tbCargos__7299C3E6DC6E6998");

                entity.ToTable("tbCargos", "mant");

                entity.Property(e => e.carg_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.carg_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.carg_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.carg_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.carg_UserCreacionNavigation)
                    .WithMany(p => p.tbCargoscarg_UserCreacionNavigation)
                    .HasForeignKey(d => d.carg_UserCreacion)
                    .HasConstraintName("FK_mant_tbCargos_carg_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.carg_UserModificacionNavigation)
                    .WithMany(p => p.tbCargoscarg_UserModificacionNavigation)
                    .HasForeignKey(d => d.carg_UserModificacion)
                    .HasConstraintName("FK_mant_tbCargos_carg_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbCuidadoPlanta>(entity =>
            {
                entity.HasKey(e => e.cupl_Id)
                    .HasName("PK__tbCuidad__93AC3C71DA5ADEB2");

                entity.ToTable("tbCuidadoPlanta", "bota");

                entity.Property(e => e.cupl_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.cupl_Fecha)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.cupl_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.cupl_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.cupl_UserCreacionNavigation)
                    .WithMany(p => p.tbCuidadoPlantacupl_UserCreacionNavigation)
                    .HasForeignKey(d => d.cupl_UserCreacion)
                    .HasConstraintName("FK_bota_tbCuidadosPlanta_cupl_UserModificacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.cupl_UserModificacionNavigation)
                    .WithMany(p => p.tbCuidadoPlantacupl_UserModificacionNavigation)
                    .HasForeignKey(d => d.cupl_UserModificacion)
                    .HasConstraintName("FK_bota_tbCuidadosPlanta_cupl_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.plan)
                    .WithMany(p => p.tbCuidadoPlanta)
                    .HasForeignKey(d => d.plan_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_bota_tbCuidadosPlanta_bota_tbPlantas_plan_Id");

                entity.HasOne(d => d.ticu)
                    .WithMany(p => p.tbCuidadoPlanta)
                    .HasForeignKey(d => d.ticu_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_bota_tbCuidadosPlanta_bota_TiposCuidados_ticu_Id");
            });

            modelBuilder.Entity<tbCuidados>(entity =>
            {
                entity.HasKey(e => e.cuid_Id)
                    .HasName("PK__tbCuidad__A5CC5EAAEC999DCF");

                entity.ToTable("tbCuidados", "bota");

                entity.Property(e => e.cuid_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.cuid_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.cuid_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.cuid_Observacion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.cuid_UserCreacionNavigation)
                    .WithMany(p => p.tbCuidadoscuid_UserCreacionNavigation)
                    .HasForeignKey(d => d.cuid_UserCreacion)
                    .HasConstraintName("FK_bota_tbCuidados_cuid_UserModificacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.cuid_UserModificacionNavigation)
                    .WithMany(p => p.tbCuidadoscuid_UserModificacionNavigation)
                    .HasForeignKey(d => d.cuid_UserModificacion)
                    .HasConstraintName("FK_bota_tbCuidados_cuid_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.ticu)
                    .WithMany(p => p.tbCuidados)
                    .HasForeignKey(d => d.ticu_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_bota_tbCuidados_bota_TiposCuidados_ticu_Id");
            });

            modelBuilder.Entity<tbDepartamentos>(entity =>
            {
                entity.HasKey(e => e.dept_Id)
                    .HasName("PK__tbDepart__DCA97B6C90D9250F");

                entity.ToTable("tbDepartamentos", "mant");

                entity.Property(e => e.dept_Id)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.dept_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.dept_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.dept_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.dept_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.dept_UserCreacionNavigation)
                    .WithMany(p => p.tbDepartamentosdept_UserCreacionNavigation)
                    .HasForeignKey(d => d.dept_UserCreacion)
                    .HasConstraintName("FK_mant_tbDepartamento_dept_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.dept_UserModificacionNavigation)
                    .WithMany(p => p.tbDepartamentosdept_UserModificacionNavigation)
                    .HasForeignKey(d => d.dept_UserModificacion)
                    .HasConstraintName("FK_mant_tbDepartamento_dept_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbEmpleados>(entity =>
            {
                entity.HasKey(e => e.empl_Id)
                    .HasName("PK__tbEmplea__4772AE3155CE040A");

                entity.ToTable("tbEmpleados", "mant");

                entity.HasIndex(e => e.empl_Identidad, "UK_mant_tbEmpleados_empl_Identidad")
                    .IsUnique();

                entity.Property(e => e.empl_Apellido)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.empl_Direccion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empl_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.empl_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.empl_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.empl_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.empl_Identidad)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.empl_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.empl_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.empl_Telefono)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.carg)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.carg_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_mant_tbEmpleados_carg_Id_mant_tbCargos_carg_Id");

                entity.HasOne(d => d.empl_UserCreacionNavigation)
                    .WithMany(p => p.tbEmpleadosempl_UserCreacionNavigation)
                    .HasForeignKey(d => d.empl_UserCreacion)
                    .HasConstraintName("FK_mant_tbEmpleados_empl_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.empl_UserModificacionNavigation)
                    .WithMany(p => p.tbEmpleadosempl_UserModificacionNavigation)
                    .HasForeignKey(d => d.empl_UserModificacion)
                    .HasConstraintName("FK_mant_tbEmpleados_empl_UserModificacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.estc)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.estc_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_mant_tbEmpleados_estc_Id_mant_tbEstadosCiviles_estc_Id");

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_mant_tbEmpleados_muni_Id_mant_tbMunicipios_muni_Id");
            });

            modelBuilder.Entity<tbEspecies>(entity =>
            {
                entity.HasKey(e => e.espe_Id)
                    .HasName("PK__tbEspeci__F8D93E03205D5DDF");

                entity.ToTable("tbEspecies", "zool");

                entity.Property(e => e.espe_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.espe_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.espe_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.espe_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.espe_UserCreacionNavigation)
                    .WithMany(p => p.tbEspeciesespe_UserCreacionNavigation)
                    .HasForeignKey(d => d.espe_UserCreacion)
                    .HasConstraintName("FK_zool_tbEspecies_espe_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.espe_UserModificacionNavigation)
                    .WithMany(p => p.tbEspeciesespe_UserModificacionNavigation)
                    .HasForeignKey(d => d.espe_UserModificacion)
                    .HasConstraintName("FK_zool_tbEspecies_espe_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbEstadosCiviles>(entity =>
            {
                entity.HasKey(e => e.estc_Id)
                    .HasName("PK__tbEstado__5C9E18A7122044A0");

                entity.ToTable("tbEstadosCiviles", "mant");

                entity.Property(e => e.estc_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.estc_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.estc_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.estc_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.estc_UserCreacionNavigation)
                    .WithMany(p => p.tbEstadosCivilesestc_UserCreacionNavigation)
                    .HasForeignKey(d => d.estc_UserCreacion)
                    .HasConstraintName("FK_mant_tbEstadosCiviles_estc_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.estc_UserModificacionNavigation)
                    .WithMany(p => p.tbEstadosCivilesestc_UserModificacionNavigation)
                    .HasForeignKey(d => d.estc_UserModificacion)
                    .HasConstraintName("FK_mant_tbEstadosCiviles_estc_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbFacturas>(entity =>
            {
                entity.HasKey(e => e.fact_Id)
                    .HasName("PK__tbFactur__4BC2E72B6AF80FC5");

                entity.ToTable("tbFacturas", "fact");

                entity.Property(e => e.fact_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.fact_Fecha).HasColumnType("datetime");

                entity.Property(e => e.fact_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.fact_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.empl)
                    .WithMany(p => p.tbFacturas)
                    .HasForeignKey(d => d.empl_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_fact_tbFacturas_empl_Id_mant_tbEmpleados_empl_Id");

                entity.HasOne(d => d.fact_UserCreacionNavigation)
                    .WithMany(p => p.tbFacturasfact_UserCreacionNavigation)
                    .HasForeignKey(d => d.fact_UserCreacion)
                    .HasConstraintName("FK_fact_tbFacturas_fact_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.fact_UserModificacionNavigation)
                    .WithMany(p => p.tbFacturasfact_UserModificacionNavigation)
                    .HasForeignKey(d => d.fact_UserModificacion)
                    .HasConstraintName("FK_fact_tbFacturas_fact_UserModificacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.meto)
                    .WithMany(p => p.tbFacturas)
                    .HasForeignKey(d => d.meto_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_fact_tbFacturas_meto_Id_fact_tbMetodosPago");

                entity.HasOne(d => d.visi)
                    .WithMany(p => p.tbFacturas)
                    .HasForeignKey(d => d.visi_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_fact_tbFacturas_visi_Id_mant_tbVisitantes_visi_Id");
            });

            modelBuilder.Entity<tbFacturasDetalles>(entity =>
            {
                entity.HasKey(e => e.fade_Id)
                    .HasName("PK__tbFactur__5E4AE484FB6EA09C");

                entity.ToTable("tbFacturasDetalles", "fact");

                entity.Property(e => e.fade_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.fade_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.fade_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.fade_Total).HasColumnType("decimal(8, 2)");

                entity.HasOne(d => d.fact)
                    .WithMany(p => p.tbFacturasDetalles)
                    .HasForeignKey(d => d.fact_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_fact_tbFacturasDetalles_fact_Id_fact_tbFacturas_fact_Id");

                entity.HasOne(d => d.fade_UserCreacionNavigation)
                    .WithMany(p => p.tbFacturasDetallesfade_UserCreacionNavigation)
                    .HasForeignKey(d => d.fade_UserCreacion)
                    .HasConstraintName("FK_fact_tbFacturasDetalles_fade_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.fade_UserModificacionNavigation)
                    .WithMany(p => p.tbFacturasDetallesfade_UserModificacionNavigation)
                    .HasForeignKey(d => d.fade_UserModificacion)
                    .HasConstraintName("FK_fact_tbFacturasDetalles_fade_UserModificacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.tick)
                    .WithMany(p => p.tbFacturasDetalles)
                    .HasForeignKey(d => d.tick_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_fact_tbFacturasDetalles_tick_Id_fact_tbTickets_tick_Id");
            });

            modelBuilder.Entity<tbHabitat>(entity =>
            {
                entity.HasKey(e => e.habi_Id)
                    .HasName("PK__tbHabita__A9F51641CC7B7222");

                entity.ToTable("tbHabitat", "zool");

                entity.Property(e => e.habi_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.habi_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.habi_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.habi_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.habi_UserCreacionNavigation)
                    .WithMany(p => p.tbHabitathabi_UserCreacionNavigation)
                    .HasForeignKey(d => d.habi_UserCreacion)
                    .HasConstraintName("FK_zool_tbHabitat_habi_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.habi_UserModificacionNavigation)
                    .WithMany(p => p.tbHabitathabi_UserModificacionNavigation)
                    .HasForeignKey(d => d.habi_UserModificacion)
                    .HasConstraintName("FK_zool_tbHabitat_habi_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbMantenimientoAnimal>(entity =>
            {
                entity.HasKey(e => e.maan_Id)
                    .HasName("PK__tbManten__A4AE888D0DB56D8E");

                entity.ToTable("tbMantenimientoAnimal", "mant");

                entity.Property(e => e.maan_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.maan_Fecha)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.maan_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.maan_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.anim)
                    .WithMany(p => p.tbMantenimientoAnimal)
                    .HasForeignKey(d => d.anim_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_mant_tbMantenimientoAnimal_anim_tbAnimales_anim_Id");

                entity.HasOne(d => d.maan_UserCreacionNavigation)
                    .WithMany(p => p.tbMantenimientoAnimalmaan_UserCreacionNavigation)
                    .HasForeignKey(d => d.maan_UserCreacion)
                    .HasConstraintName("FK_mant_tbMantenimientoAnimal_maan_UserModificacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.maan_UserModificacionNavigation)
                    .WithMany(p => p.tbMantenimientoAnimalmaan_UserModificacionNavigation)
                    .HasForeignKey(d => d.maan_UserModificacion)
                    .HasConstraintName("FK_mant_tbMantenimientoAnimal_maan_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.tima)
                    .WithMany(p => p.tbMantenimientoAnimal)
                    .HasForeignKey(d => d.tima_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_mant_tbMantenimientoAnimal_mant_tbTiposMantenimientos_tima_Id");
            });

            modelBuilder.Entity<tbMantenimientos>(entity =>
            {
                entity.HasKey(e => e.mant_Id)
                    .HasName("PK__tbManten__C4A585D8EC9D2F66");

                entity.ToTable("tbMantenimientos", "mant");

                entity.Property(e => e.mant_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.mant_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.mant_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.mant_Observaciones)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.mant_UserCreacionNavigation)
                    .WithMany(p => p.tbMantenimientosmant_UserCreacionNavigation)
                    .HasForeignKey(d => d.mant_UserCreacion)
                    .HasConstraintName("FK_mant_tbMantenimientos_mant_UserModificacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.mant_UserModificacionNavigation)
                    .WithMany(p => p.tbMantenimientosmant_UserModificacionNavigation)
                    .HasForeignKey(d => d.mant_UserModificacion)
                    .HasConstraintName("FK_mant_tbMantenimientos_mant_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.tima)
                    .WithMany(p => p.tbMantenimientos)
                    .HasForeignKey(d => d.tima_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_mant_tbMantenimientos_tima_Id_mant_tbTiposMantenientos_tima_iD");
            });

            modelBuilder.Entity<tbMetodosPago>(entity =>
            {
                entity.HasKey(e => e.meto_Id)
                    .HasName("PK__tbMetodo__CDF43E9AF3789C0A");

                entity.ToTable("tbMetodosPago", "fact");

                entity.Property(e => e.meto_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.meto_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.meto_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.meto_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.meto_UserCreacionNavigation)
                    .WithMany(p => p.tbMetodosPagometo_UserCreacionNavigation)
                    .HasForeignKey(d => d.meto_UserCreacion)
                    .HasConstraintName("FK_fact_tbMetodosPago_meto_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.meto_UserModificacionNavigation)
                    .WithMany(p => p.tbMetodosPagometo_UserModificacionNavigation)
                    .HasForeignKey(d => d.meto_UserModificacion)
                    .HasConstraintName("FK_fact_tbMetodosPago_meto_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbMunicipios>(entity =>
            {
                entity.HasKey(e => e.muni_Id)
                    .HasName("PK__tbMunici__CF2E0951FB595CBE");

                entity.ToTable("tbMunicipios", "mant");

                entity.Property(e => e.muni_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.dept_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.muni_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.muni_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.muni_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.dept)
                    .WithMany(p => p.tbMunicipios)
                    .HasForeignKey(d => d.dept_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbMunicipios_dept_Id_mant_tbDepartamentos_dept_Id");

                entity.HasOne(d => d.muni_UserCreacionNavigation)
                    .WithMany(p => p.tbMunicipiosmuni_UserCreacionNavigation)
                    .HasForeignKey(d => d.muni_UserCreacion)
                    .HasConstraintName("FK_mant_tbMunicipios_muni_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.muni_UserModificacionNavigation)
                    .WithMany(p => p.tbMunicipiosmuni_UserModificacionNavigation)
                    .HasForeignKey(d => d.muni_UserModificacion)
                    .HasConstraintName("FK_mant_tbMunicipios_muni_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbPantallas>(entity =>
            {
                entity.HasKey(e => e.pant_Id)
                    .HasName("PK__tbPantal__64687FD2812FF9C2");

                entity.ToTable("tbPantallas", "acce");

                entity.Property(e => e.pant_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.pant_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.pant_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.pant_UserCreacionNavigation)
                    .WithMany(p => p.tbPantallaspant_UserCreacionNavigation)
                    .HasForeignKey(d => d.pant_UserCreacion)
                    .HasConstraintName("FK_acce_tbPantallas_pant_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.pant_UserModificacionNavigation)
                    .WithMany(p => p.tbPantallaspant_UserModificacionNavigation)
                    .HasForeignKey(d => d.pant_UserModificacion)
                    .HasConstraintName("FK_acce_tbPantallas_pant_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbPlantas>(entity =>
            {
                entity.HasKey(e => e.plan_Id)
                    .HasName("PK__tbPlanta__BE9E933534E4E464");

                entity.ToTable("tbPlantas", "bota");

                entity.HasIndex(e => e.plan_Codigo, "UQ__tbPlanta__CDB8ADDB987E8C1A")
                    .IsUnique();

                entity.Property(e => e.plan_Codigo)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.plan_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.plan_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.plan_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.arbo)
                    .WithMany(p => p.tbPlantas)
                    .HasForeignKey(d => d.arbo_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_bota_tbPlantas_arbo_Id_bota_tbAreasBotanicas_arbo_Id");

                entity.HasOne(d => d.plan_UserCreacionNavigation)
                    .WithMany(p => p.tbPlantasplan_UserCreacionNavigation)
                    .HasForeignKey(d => d.plan_UserCreacion)
                    .HasConstraintName("FK_bota_tbPlantas_plan_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.plan_UserModificacionNavigation)
                    .WithMany(p => p.tbPlantasplan_UserModificacionNavigation)
                    .HasForeignKey(d => d.plan_UserModificacion)
                    .HasConstraintName("FK_bota_tbPlantas_plan_UserModificacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.tipl)
                    .WithMany(p => p.tbPlantas)
                    .HasForeignKey(d => d.tipl_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_bota_tbPlantas_tipl_Id_bota_tbTiposPlantas_tipl_Id");
            });

            modelBuilder.Entity<tbRazas>(entity =>
            {
                entity.HasKey(e => e.raza_Id)
                    .HasName("PK__tbRazas__D23D30E574D6A198");

                entity.ToTable("tbRazas", "zool");

                entity.HasIndex(e => e.raza_NombreCientifico, "UQ__tbRazas__03BB2666A6E36E65")
                    .IsUnique();

                entity.Property(e => e.raza_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.raza_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.raza_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.raza_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.raza_NombreCientifico)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.espe)
                    .WithMany(p => p.tbRazas)
                    .HasForeignKey(d => d.espe_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_zool_tbRazas_espe_Id_zool_tbEspecies_espe_Id");

                entity.HasOne(d => d.habi)
                    .WithMany(p => p.tbRazas)
                    .HasForeignKey(d => d.habi_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_zool_tbRazas_habi_Id_zool_tbHabitat_habi_Id");

                entity.HasOne(d => d.raza_UserCreacionNavigation)
                    .WithMany(p => p.tbRazasraza_UserCreacionNavigation)
                    .HasForeignKey(d => d.raza_UserCreacion)
                    .HasConstraintName("FK_zool_tbRazas_raza_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.raza_UserModificacionNavigation)
                    .WithMany(p => p.tbRazasraza_UserModificacionNavigation)
                    .HasForeignKey(d => d.raza_UserModificacion)
                    .HasConstraintName("FK_zool_tbRazas_raza_UserModificacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.rein)
                    .WithMany(p => p.tbRazas)
                    .HasForeignKey(d => d.rein_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_zool_tbRazas_rein_Id_zool_tbReinos_rein_Id");
            });

            modelBuilder.Entity<tbReinos>(entity =>
            {
                entity.HasKey(e => e.rein_Id)
                    .HasName("PK__tbReinos__473EAA84E3BB3FF5");

                entity.ToTable("tbReinos", "zool");

                entity.Property(e => e.rein_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.rein_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.rein_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.rein_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.rein_UserCreacionNavigation)
                    .WithMany(p => p.tbReinosrein_UserCreacionNavigation)
                    .HasForeignKey(d => d.rein_UserCreacion)
                    .HasConstraintName("FK_zool_tbReinos_rein_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.rein_UserModificacionNavigation)
                    .WithMany(p => p.tbReinosrein_UserModificacionNavigation)
                    .HasForeignKey(d => d.rein_UserModificacion)
                    .HasConstraintName("FK_zool_tbReinos_rein_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.role_Id)
                    .HasName("PK__tbRoles__760F99A43A5F1374");

                entity.ToTable("tbRoles", "acce");

                entity.Property(e => e.role_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.role_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.role_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.role_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.role_UserCreacionNavigation)
                    .WithMany(p => p.tbRolesrole_UserCreacionNavigation)
                    .HasForeignKey(d => d.role_UserCreacion)
                    .HasConstraintName("FK_acce_tbRoles_role_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.role_UserModificacionNavigation)
                    .WithMany(p => p.tbRolesrole_UserModificacionNavigation)
                    .HasForeignKey(d => d.role_UserModificacion)
                    .HasConstraintName("FK_acce_tbRoles_role_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbRolesPantallas>(entity =>
            {
                entity.HasKey(e => e.ropa_Id)
                    .HasName("PK__tbRolesP__0572722952A9A071");

                entity.ToTable("tbRolesPantallas", "acce");

                entity.Property(e => e.ropa_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ropa_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.ropa_UserCreacionNavigation)
                    .WithMany(p => p.tbRolesPantallasropa_UserCreacionNavigation)
                    .HasForeignKey(d => d.ropa_UserCreacion)
                    .HasConstraintName("FK_acce_tbRolesPantallas_ropa_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.ropa_UserModificacionNavigation)
                    .WithMany(p => p.tbRolesPantallasropa_UserModificacionNavigation)
                    .HasForeignKey(d => d.ropa_UserModificacion)
                    .HasConstraintName("FK_acce_tbRolesPantallas_ropa_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbTickets>(entity =>
            {
                entity.HasKey(e => e.tick_Id)
                    .HasName("PK__tbTicket__26D61C66974E4CC4");

                entity.ToTable("tbTickets", "fact");

                entity.Property(e => e.tick_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.tick_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.tick_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.tick_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.tick_Precio).HasColumnType("decimal(8, 2)");

                entity.HasOne(d => d.tick_UserCreacionNavigation)
                    .WithMany(p => p.tbTicketstick_UserCreacionNavigation)
                    .HasForeignKey(d => d.tick_UserCreacion)
                    .HasConstraintName("FK_fact_tbTickets_tick_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.tick_UserModificacionNavigation)
                    .WithMany(p => p.tbTicketstick_UserModificacionNavigation)
                    .HasForeignKey(d => d.tick_UserModificacion)
                    .HasConstraintName("FK_fact_tbTickets_tick_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbTiposCuidados>(entity =>
            {
                entity.HasKey(e => e.ticu_Id)
                    .HasName("PK__tbTiposC__1679FD38DA1A6435");

                entity.ToTable("tbTiposCuidados", "bota");

                entity.Property(e => e.ticu_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.ticu_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.ticu_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ticu_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.ticu_UserCreacionNavigation)
                    .WithMany(p => p.tbTiposCuidadosticu_UserCreacionNavigation)
                    .HasForeignKey(d => d.ticu_UserCreacion)
                    .HasConstraintName("FK_bota_TiposCuidados_ticu_UserModificacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.ticu_UserModificacionNavigation)
                    .WithMany(p => p.tbTiposCuidadosticu_UserModificacionNavigation)
                    .HasForeignKey(d => d.ticu_UserModificacion)
                    .HasConstraintName("FK_bota_TiposCuidados_ticu_UserCreacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbTiposMantenimientos>(entity =>
            {
                entity.HasKey(e => e.tima_Id)
                    .HasName("PK__tbTiposM__5E8300727EEEF1F9");

                entity.ToTable("tbTiposMantenimientos", "mant");

                entity.Property(e => e.tima_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.tima_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.tima_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.tima_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.tima_UserCreacionNavigation)
                    .WithMany(p => p.tbTiposMantenimientostima_UserCreacionNavigation)
                    .HasForeignKey(d => d.tima_UserCreacion)
                    .HasConstraintName("FK_zool_tbTiposMantenimientos_mant_UserModificacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.tima_UserModificacionNavigation)
                    .WithMany(p => p.tbTiposMantenimientostima_UserModificacionNavigation)
                    .HasForeignKey(d => d.tima_UserModificacion)
                    .HasConstraintName("FK_zool_tbTiposMantenimientos_mant_UserCreacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbTiposPlantas>(entity =>
            {
                entity.HasKey(e => e.tipl_Id)
                    .HasName("PK__tbTiposP__14B994BE6847079E");

                entity.ToTable("tbTiposPlantas", "bota");

                entity.HasIndex(e => e.tipl_NombreCientifico, "UQ__tbTiposP__F5FBE65DD38837D1")
                    .IsUnique();

                entity.Property(e => e.tipl_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.tipl_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.tipl_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.tipl_NombreCientifico)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.tipl_NombreComun)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.rein)
                    .WithMany(p => p.tbTiposPlantas)
                    .HasForeignKey(d => d.rein_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_bota_tbTiposPlantas_rein_Id_zool_tbReinos_rein_Id");

                entity.HasOne(d => d.tipl_UserCreacionNavigation)
                    .WithMany(p => p.tbTiposPlantastipl_UserCreacionNavigation)
                    .HasForeignKey(d => d.tipl_UserCreacion)
                    .HasConstraintName("FK_bota_tbTiposPlantas_tipl_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.tipl_UserModificacionNavigation)
                    .WithMany(p => p.tbTiposPlantastipl_UserModificacionNavigation)
                    .HasForeignKey(d => d.tipl_UserModificacion)
                    .HasConstraintName("FK_bota_tbTiposPlantas_tipl_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.usua_Id)
                    .HasName("PK__tbUsuari__EA3EC7A2BD60225B");

                entity.ToTable("tbUsuarios", "acce");

                entity.HasIndex(e => e.usua_NombreUsuario, "UK_acce_tbUsuarios_usua_NombreUsuario")
                    .IsUnique();

                entity.Property(e => e.usua_Clave).IsRequired();

                entity.Property(e => e.usua_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.usua_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.usua_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.usua_NombreUsuario)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.usua_UserCreacionNavigation)
                    .WithMany(p => p.Inverseusua_UserCreacionNavigation)
                    .HasForeignKey(d => d.usua_UserCreacion)
                    .HasConstraintName("FK_acce_tbUsuarios_usua_UserCreacion");

                entity.HasOne(d => d.usua_UserModificacionNavigation)
                    .WithMany(p => p.Inverseusua_UserModificacionNavigation)
                    .HasForeignKey(d => d.usua_UserModificacion)
                    .HasConstraintName("FK_acce_tbUsuarios_usua_UserModificacion");
            });

            modelBuilder.Entity<tbVisitantes>(entity =>
            {
                entity.HasKey(e => e.visi_Id)
                    .HasName("PK__tbVisita__0B633A079D367F8A");

                entity.ToTable("tbVisitantes", "mant");

                entity.HasIndex(e => e.visi_RTN, "UK_mant_tbVisitantes_visi_RTN")
                    .IsUnique();

                entity.Property(e => e.visi_Apellido)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.visi_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.visi_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.visi_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.visi_Nombres)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.visi_RTN)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.visi_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.visi_UserCreacionNavigation)
                    .WithMany(p => p.tbVisitantesvisi_UserCreacionNavigation)
                    .HasForeignKey(d => d.visi_UserCreacion)
                    .HasConstraintName("FK_mant_tbVisitantes_visi_UserCreacion_acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.visi_UserModificacionNavigation)
                    .WithMany(p => p.tbVisitantesvisi_UserModificacionNavigation)
                    .HasForeignKey(d => d.visi_UserModificacion)
                    .HasConstraintName("FK_mant_tbVisitantes_visi_UserModificacion_acce_tbUsuarios_usua_Id");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}